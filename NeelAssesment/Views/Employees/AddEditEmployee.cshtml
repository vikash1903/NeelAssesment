@model Neel.Core.Models.Models.EmployeeModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @required = "required", @onkeyup = "this.value=this.value.replace(/[^\\w- ]+/ig, '')", @placeholder = "Name", @value = "" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Designation" } })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", @required = "required", @onkeyup = "this.value=this.value.replace(/\\D+/ig, '')", @placeholder = "Contact Number" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Blood Group" } })
                @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Salary Amount" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" id="addemp" value="Save">
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

    function AddEmpDetail() {
        var response = {
            EmployeeId: $("#EmployeeId").val(), EmployeeName: $("#EmployeeName").val(),
            Designation: $("#Designation").val(), MobileNumber: $("#MobileNumber").val(),
            BloodGroup: $("#BloodGroup").val(), Salary: $("#Salary").val()
        }

        $.ajax({
            type: "Post",
            url: "/Employees/AddEditEmployee",
            data: response,
            dataType: "json",
            success: function (result) {
                if (result != null && result != undefined) {
                    var alertmsg = bootbox.alert({
                        message: result,
                        callback: function () {
                           window.location.href = '/Employees/Index';
                        }
                    })
                    alertmsg.find("div.modal-dialog").addClass("largeWidth")
                }
            }
        });
    }


    $('#addemp').click(function () {
        var a = $('#EmployeeName').val();
        var b = $('#Designation').val();
        var c = $('#MobileNumber').val();
        var d = $('#BloodGroup').val();
        var e = $('#Salary').val();

        if (a != '' && b != '' && c != '' && d != '' && e != '') {
        } else {
            //alert('Please Fill All The Fields')
            return
        }
        document.getElementById("addemp").disabled = true;
        AddEmpDetail();
    })
    $(document).ready(function () {
        $('form').removeAttr('novalidate')
    })
</script>

